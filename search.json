[{"path":"https://elipousson.github.io/cliExtras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cliExtras authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/cliExtras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/cliExtras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2023). cliExtras: Collection Helper Functions cli package. https://github.com/elipousson/cliExtras, https://elipousson.github.io/cliExtras/.","code":"@Manual{,   title = {cliExtras: A Collection of Helper Functions for the cli package},   author = {Eli Pousson},   year = {2023},   note = {https://github.com/elipousson/cliExtras, https://elipousson.github.io/cliExtras/}, }"},{"path":"https://elipousson.github.io/cliExtras/index.html","id":"cliextras","dir":"","previous_headings":"","what":"A Collection of Helper Functions for the cli package","title":"A Collection of Helper Functions for the cli package","text":"goal cliExtras extend cli package number helper functions.","code":""},{"path":"https://elipousson.github.io/cliExtras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Collection of Helper Functions for the cli package","text":"can install development version cliExtras like :","code":"pak::pkg_install(\"elipousson/cliExtras\")"},{"path":"https://elipousson.github.io/cliExtras/reference/cliExtras-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cliExtras: A Collection of Helper Functions for the cli package — cliExtras-package","title":"cliExtras: A Collection of Helper Functions for the cli package — cliExtras-package","text":"Extends cli package user response prompts stopifnot equivalents.","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cliExtras-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cliExtras: A Collection of Helper Functions for the cli package — cliExtras-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_abort_ifnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal an error, warning, or message with a cli formatted message if any\nexpressions in ... are not all TRUE or are all TRUE — cli_abort_ifnot","title":"Signal an error, warning, or message with a cli formatted message if any\nexpressions in ... are not all TRUE or are all TRUE — cli_abort_ifnot","text":"Signal error, warning, message cli formatted message expressions ... TRUE TRUE","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_abort_ifnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal an error, warning, or message with a cli formatted message if any\nexpressions in ... are not all TRUE or are all TRUE — cli_abort_ifnot","text":"","code":"cli_abort_ifnot(   ...,   message = NULL,   call = .envir,   .envir = parent.frame(),   .frame = .envir,   condition = NULL )  cli_abort_if(   ...,   message = NULL,   call = .envir,   .envir = parent.frame(),   .frame = .envir,   condition = NULL )  cli_warn_ifnot(..., message = NULL, .envir = parent.frame(), condition = NULL)  cli_warn_if(..., message = NULL, .envir = parent.frame(), condition = NULL)  cli_inform_ifnot(   ...,   message = NULL,   .envir = parent.frame(),   condition = NULL )  cli_inform_if(..., message = NULL, .envir = parent.frame(), condition = NULL)"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_abort_ifnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal an error, warning, or message with a cli formatted message if any\nexpressions in ... are not all TRUE or are all TRUE — cli_abort_ifnot","text":"... number R expressions evaluate logical vector. ... named, names passed message parameter. message provided, names logical expressions ignored. items ... named, missing names created rlang::exprs_auto_name(). single list provided, list assumed named list logical values expressions evaluate logical values. message formatted via call cli_bullets(). call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. .envir Environment evaluate glue expressions . .frame throwing context. Used default .trace_bottom, determine internal package mention internal errors .internal TRUE. condition Logical. ifnot style functions, FALSE, signal error, warning, message. style functions, signal error, warning, message TRUE. Defaults NULL. Ignored multiple parameters provided ...","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_alert_ifnot.html","id":null,"dir":"Reference","previous_headings":"","what":"CLI conditional alerts — cli_alert_ifnot","title":"CLI conditional alerts — cli_alert_ifnot","text":"Alerts typically short status messages. Note: functions use wrap = TRUE default. Alert messages can muffled set_cli_quiet() cli::cli_inform() messages .","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_alert_ifnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CLI conditional alerts — cli_alert_ifnot","text":"","code":"cli_alert_ifnot(   text = NULL,   condition = NULL,   .fn = cli::cli_alert,   id = NULL,   class = NULL,   wrap = TRUE,   .envir = parent.frame(),   call = parent.frame() )  cli_danger_ifnot(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_info_ifnot(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_success_ifnot(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_warning_ifnot(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_alert_if(   text = NULL,   condition = NULL,   .fn = cli::cli_alert,   id = NULL,   class = NULL,   wrap = TRUE,   .envir = parent.frame(),   call = parent.frame() )  cli_danger_if(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_info_if(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_success_if(text = NULL, condition = NULL, ..., .envir = parent.frame())  cli_warning_if(text = NULL, condition = NULL, ..., .envir = parent.frame())"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_alert_ifnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CLI conditional alerts — cli_alert_ifnot","text":"text Text alert. condition TRUE, display alert \"\" functions. FALSE, display alert \"ifnot\" functions. .fn cli function use alert. Defaults cli::cli_alert. Supported options also include \"danger\", \"info\", \"success\", \"warning\". id Id alert element. Can used themes. class Class alert element. Can used themes. wrap Whether auto-wrap text alert. .envir Environment evaluate glue expressions . call Caller environment. Used improve error messages argument checks. ... Additional parameters passed cli_alert_if cli_alert_ifnot functions like cli_info_ifnot().","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cli_alert_ifnot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CLI conditional alerts — cli_alert_ifnot","text":"","code":"if (FALSE) { if (interactive()) {   cli_alert_if(text = \"Example text\", condition = TRUE)    cli_alert_ifnot(text = \"Example text\", condition = FALSE)    cli_alert_success_if(text = \"Success!\", condition = TRUE)    cli_alert_danger_ifnot(text = \"Danger!\", condition = FALSE) } }"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ask.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Message then Read a Line from the Terminal — cli_ask","title":"Display a Message then Read a Line from the Terminal — cli_ask","text":"Display Message Read Line Terminal","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Message then Read a Line from the Terminal — cli_ask","text":"","code":"cli_ask(prompt = \"?\", ..., .envir = parent.frame())"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Message then Read a Line from the Terminal — cli_ask","text":"prompt Characters show user prompt console following displayed message. non-breaking space always placed prompt passing readline(). Defaults \"?\". ... Arguments passed cli::cli_bullets text Character vector items. See details names interpreted. id Optional id div.bullets element, can used themes. class Optional additional class(es) div.bullets element. .envir Environment evaluate glue expressions .","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cli_bulletize.html","id":null,"dir":"Reference","previous_headings":"","what":"List of items using bulletize helper — cli_bulletize","title":"List of items using bulletize helper — cli_bulletize","text":"List items using bulletize helper","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_bulletize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of items using bulletize helper — cli_bulletize","text":"","code":"cli_bulletize(   items,   bullet = \"*\",   n_show = Inf,   n_fudge = 2,   style = NULL,   sep = NULL,   before = NULL,   after = NULL,   id = NULL,   class = NULL,   .envir = parent.frame() )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_bulletize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of items using bulletize helper — cli_bulletize","text":"items named vector list use creating bulletted list cli::cli_bullets(). bullet Character use bullet. Defaults \"\". n_show maximum number items include bullet list. Defaults 5. n_fudge minimum number items include summary additional bullet items. summary include number items equal less n_fudge, included bullet list summary displayed. Defaults 2. style cli style name, e.g. code, val, file, url sep, , Additional characters character vectors applied using paste0(, sep, , ). Defaults NULL. id Optional id div.bullets element, can used themes. class Optional additional class(es) div.bullets element. .envir Environment evaluate glue expressions .","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Assorted helper functions to format text and vectors for cli messages — cli_helpers","title":"Assorted helper functions to format text and vectors for cli messages — cli_helpers","text":"functions convenient alternatives internal cli functions may removed understanding cli package improves. bracketize() pastes open close brackets around vector. stylize() appends style prefix, e.g. \"{.val value}\" vector. bulletize() turns vector neatly abbreviated bullet list. bulletize() adapted gargle package (see utils-ui.R). function available MIT license work gargle authors.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assorted helper functions to format text and vectors for cli messages — cli_helpers","text":"","code":"bracketize(..., .open = \"{\", .close = \"}\", collapse = NULL)  stylize(   x,   style = NULL,   bracket = FALSE,   .open = \"{\",   .close = \"}\",   collapse = NULL )  bulletize(   x,   bullet = \"*\",   sep = NULL,   before = NULL,   after = NULL,   style = NULL,   n_show = 5,   n_fudge = 2,   bracket = FALSE )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assorted helper functions to format text and vectors for cli messages — cli_helpers","text":"... one R objects, converted character vectors. .open, .close Open close bracket characters. collapse optional character string separate results.      NA_character_. x vector. style cli style name, e.g. code, val, file, url bracket TRUE, pass x bracketize. bullet Character use bullet. Defaults \"\". sep, , Additional characters character vectors applied using paste0(, sep, , ). n_show maximum number items include bullet list. Defaults 5. n_fudge minimum number items include summary additional bullet items. summary include number items equal less n_fudge, included bullet list summary displayed. Defaults 2.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assorted helper functions to format text and vectors for cli messages — cli_helpers","text":"","code":"bracketize(\"value\") #> [1] \"{value}\"  stylize(\"styled value\", \"val\") #> [1] \"{.val styled value}\"  stylize(\"styled variable\", \"val\", bracket = TRUE) #> [1] \"{.val {styled variable}}\"  bulletize(c(\"val 1\", \"val 2\", \"val 3\")) #>       *       *       *  #> \"val 1\" \"val 2\" \"val 3\"   bulletize(rep(\"val\", 20), n_show = 3) #>               *               *               *                  #>           \"val\"           \"val\"           \"val\" \"… and 17 more\""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a cli function if a predicate function returns TRUE — cli_if","title":"Execute a cli function if a predicate function returns TRUE — cli_if","text":"Execute function predicate function returns TRUE. Intended use cli functions.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a cli function if a predicate function returns TRUE — cli_if","text":"","code":"cli_if(   x = NULL,   ...,   .predicate = rlang::is_true,   .fn = NULL,   .default = cli::cli_alert,   call = rlang::caller_env() )  cli_ifnot(   x = NULL,   ...,   .predicate = rlang::is_false,   .fn = NULL,   .default = cli::cli_alert,   call = rlang::caller_env() )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a cli function if a predicate function returns TRUE — cli_if","text":"x Parameter passed .predicate function, Default: NULL ... Additional parameters passed .fn. .predicate Single parameter predicate function, Defaults rlang::is_true cli_if() rlang::is_false cli_ifnot(). .predicate returns TRUE, execute .fn. Aborts .predicate return boolean value. .fn Function call ... parameters x, Default: NULL .default Default function execute .predicate function returns TRUE, Default: cli::cli_alert call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a cli function if a predicate function returns TRUE — cli_if","text":"output .fn function .default .fn NULL","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a cli function if a predicate function returns TRUE — cli_if","text":"","code":"cli_if(FALSE, \"No alert.\")  cli_if(TRUE, \"Alert on TRUE!\") #> → Alert on TRUE! #> [1] \"cli-138-1\"  cli_ifnot(FALSE, \"Alert on FALSE!\") #> → Alert on FALSE! #> [1] \"cli-138-5\""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a list of files as a list of items — cli_list_files","title":"Display a list of files as a list of items — cli_list_files","text":"Display list files list items","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a list of files as a list of items — cli_list_files","text":"","code":"cli_list_files(   path,   pattern = NULL,   full.names = FALSE,   message = \"{length(files)} file{?s} found in {.path {path}}:\",   bullet = \"*\",   n_show = 10,   .envir = current_env(),   return_list = FALSE,   ... )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a list of files as a list of items — cli_list_files","text":"path character vector full path names; default     corresponds working directory, getwd().  Tilde     expansion (see path.expand) performed.  Missing     values ignored.  Elements marked encoding     converted native encoding (fails, considered     non-existent). pattern optional regular expression.  file names     match regular expression returned. full.names logical value.  TRUE, directory     path prepended file names give relative file path.     FALSE, file names (rather paths) returned. message Passed cli::cli_inform(). bullet Character defining style use list file names. n_show Number file names show list. remaining number files n_show noted end list file names displayed. Defaults 10. .envir Passed cli::cli_inform(). Defaults rlang::current_env() rather parent.frame() support evaluation default message includes number files found path. return_list TRUE, return list files displaying cli message. Defaults FALSE. ... Arguments passed base::list.files .files logical value.  FALSE,     names visible files returned (following Unix-style visibility,     files whose name start dot).  TRUE,     file names returned. recursive logical.  listing recurse directories? ignore.case logical.  pattern-matching case-insensitive? include.dirs logical.  subdirectory names included     recursive listings?  (always non-recursive ones). .. logical.  \".\" \"..\" excluded     also non-recursive listings?","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cli_list_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a list of files as a list of items — cli_list_files","text":"","code":"cli_list_files(system.file(\"R\", package = \"cliExtras\"), n_show = 5) #> 3 files found in /home/runner/work/_temp/Library/cliExtras/R: #> • cliExtras #> • cliExtras.rdb #> • cliExtras.rdx"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a Message then Read a Line from the Terminal — cli_menu","title":"Display a Message then Read a Line from the Terminal — cli_menu","text":"Display Message Read Line Terminal","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a Message then Read a Line from the Terminal — cli_menu","text":"","code":"cli_menu(   choices,   title = NULL,   message = \"Enter your selection or press {.kbd 0} to exit.\",   prompt = \"Selection:\",   exit = 0,   ind = FALSE,   id = NULL,   call = .envir,   .envir = parent.frame() )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a Message then Read a Line from the Terminal — cli_menu","text":"choices Required vector list choices. title Title menu. Character vector passed cli::cli_h2() title length 1 cli::cli_bullets() length greater 1. message Additional message display choices prompt. prompt Characters show user prompt console following displayed menu options. Defaults \"Selection:\" (matching utils::menu()) exit Character use exit menu. ind TRUE, return index position, FALSE (default), return item choices. id Optional id div.bullets element, can used themes. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. .envir Environment evaluate glue expressions .","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a Message then Read a Line from the Terminal — cli_menu","text":"","code":"if (FALSE) { if (interactive()) {   cli_menu(list(\"A\", \"B\", \"C\"), title = \"Pick a letter?\")    cli_menu(c(\"A\", \"B\", \"C\"), labels = \"Alpha\")    cli_menu(list(list(1, 2, 3), \"A\", \"B\", \"C\"), title = \"Pick from a list\") } }"},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cli_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a list of file paths — cli_paths","text":"","code":"cli_paths(path, msg)"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a list of file paths — cli_paths","text":"path One file paths. msg Passed message cli_inform()","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display a list of file paths — cli_paths","text":"Use cli_list_files() instead.","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/cli_progress_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplified cli progress message for combining with a pipe — cli_progress_pipe","title":"Simplified cli progress message for combining with a pipe — cli_progress_pipe","text":"convenience function creating progress messages use piped data input.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_progress_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplified cli progress message for combining with a pipe — cli_progress_pipe","text":"","code":"cli_progress_pipe(   data,   ...,   current = TRUE,   clear = FALSE,   .auto_close = TRUE,   .envir = current_env(),   time = NULL )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_progress_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplified cli progress message for combining with a pipe — cli_progress_pipe","text":"data Input data. Reference w/ \"data\" .envir currrent_env(). ... Arguments passed cli::cli_progress_bar name typically used label, short, 20 characters. status New status string progress bar, NULL. type Type progress bar. used select default display format specified. Currently supported types: iterator: e.g. loop mapping function, tasks: (typically small) number tasks, download: download one file, custom: custom type, format must NULL type. total Total number progress units, NA unknown. cli_progress_update() can update total number units. handy know size download beginning, also cases. format set NULL, format (plus format_done format_failed) updated change total NA number. .e. default format strings updated, custom ones . format Format string. specified custom progress bars, otherwise optional, default display selected based progress bat type whether number total units known. Format strings may contain glue substitution, support pluralization cli styling. See progress-variables special variables can use custom format. format_done Format string successful termination. default format. format_failed Format string unsuccessful termination. default format. auto_terminate Whether terminate progress bar number current units reaches number total units. extra Extra data add progress bar. can used custom format strings example. named list. cli_progress_update() can update extra data. Often can get away referring local variables format string, need use argument. Explicitly including constants variables extra can result cleaner code. rare cases need refer progress bar multiple functions, can extra. current Passed cli_progress_bar(). clear Whether remove progress bar screen terminated. Defaults FALSE (cli::cli_progress_bar() uses TRUE). .auto_close Passed cli_progress_bar(). .envir environment use auto-termination glue substitution. also used find set current progress bar. Defaults current_env() (cli::cli_progress_bar() uses parent.frame()) time Passed Sys.sleep() optional pause displaying progress message. Defaults NULL.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_progress_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplified cli progress message for combining with a pipe — cli_progress_pipe","text":"","code":"df <- data.frame(\"letters\" = LETTERS, \"numbers\" = c(1:26))  df |>   cli_progress_pipe(\"Data has {nrow(data)} rows and {ncol(data)} columns.\") |>   head(2) #> Data has 26 rows and 2 columns. #> Data has 26 rows and 2 columns. #>  #>   letters numbers #> 1       A       1 #> 2       B       2"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_quiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Use rlang to set cli.default_handler to suppressMessages as a local or\npermanent option — cli_quiet","title":"Use rlang to set cli.default_handler to suppressMessages as a local or\npermanent option — cli_quiet","text":"cli_quiet() helper enable quiet option functions.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use rlang to set cli.default_handler to suppressMessages as a local or\npermanent option — cli_quiet","text":"","code":"cli_quiet(quiet = FALSE, push = FALSE, .frame = rlang::caller_env())"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use rlang to set cli.default_handler to suppressMessages as a local or\npermanent option — cli_quiet","text":"quiet FALSE, leave cli.default_handler option unchanged. TRUE, set cli.default_handler suppressMessages temporaily rlang::local_options() permanently rlang::push_options(). push TRUE, set cli.default_handler option rlang::push_options(). .frame environment stack frame defines scope temporary options. frame returns, options set back original values.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_quiet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use rlang to set cli.default_handler to suppressMessages as a local or\npermanent option — cli_quiet","text":"","code":"test_fn <- function(quiet = FALSE) {   cli_quiet(quiet = quiet)   cli::cli_alert_info(     \"{.arg quiet} is {.val {quiet}}\"   ) }  options(\"cli.default_handler\" = NULL)  test_fn() #> ℹ `quiet` is FALSE  test_fn(quiet = TRUE)"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ul_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a list of items as an unordered list with cli_ul() — cli_ul_items","title":"Format a list of items as an unordered list with cli_ul() — cli_ul_items","text":"Format list items unordered list cli_ul()","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ul_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a list of items as an unordered list with cli_ul() — cli_ul_items","text":"","code":"cli_ul_items(items, style = c(\"code\", \"val\"), sep = \": \", bracket = FALSE)"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_ul_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a list of items as an unordered list with cli_ul() — cli_ul_items","text":"items Character vector items, NULL. style Length 2 character vector indicating cli style use names items style use items. sep Length 1 character vector separator item names names. bracket TRUE, pass x bracketize.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_vec_last.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to add custom cli style to a vector with vec_last as a parameter — cli_vec_last","title":"Helper to add custom cli style to a vector with vec_last as a parameter — cli_vec_last","text":"Helper add custom cli style vector vec_last parameter","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_vec_last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to add custom cli style to a vector with vec_last as a parameter — cli_vec_last","text":"","code":"cli_vec_last(x, style = list(), vec_last = \" or \")  cls_vec(x, vec_last = \" or \")"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_vec_last.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to add custom cli style to a vector with vec_last as a parameter — cli_vec_last","text":"x Vector collapsed cli. style Style apply vector. used theme span element created vector. can set vec-sep vec-last modify separator last separator. vec_last Used value \"vec-last\" item style object.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_yesno.html","id":null,"dir":"Reference","previous_headings":"","what":"Yes No with Variable Responses using cli — cli_yesno","title":"Yes No with Variable Responses using cli — cli_yesno","text":"Adapted yesno::yesno() usethis::ui_yeah() work cli_inform(). function respect cliExtras.quiet option aborts session interactive.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_yesno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yes No with Variable Responses using cli — cli_yesno","text":"","code":"cli_yesno(   message,   yes = c(\"Yes\", \"Definitely\", \"For sure\", \"Yup\", \"Yeah\", \"I agree\", \"Absolutely\"),   no = c(\"No way\", \"Not now\", \"Negative\", \"No\", \"Nope\", \"Absolutely not\"),   n_yes = 2,   n_no = 1,   call = .envir,   .envir = parent.frame() )  check_yes(   prompt = NULL,   yes = c(\"\", \"Y\", \"Yes\", \"Yup\", \"Yep\", \"Yeah\"),   message = \"Aborted. A yes is required.\",   .envir = parent.frame(),   call = .envir )"},{"path":"https://elipousson.github.io/cliExtras/reference/cli_yesno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yes No with Variable Responses using cli — cli_yesno","text":"message Passed cli_inform() yes, Character strings yes options. n_yes, n_no Number yes options provide user prompt. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. .envir Environment evaluate glue expressions . prompt check_yes(), prompt always preceded \"? \" followed \"(Y/n)\" padded non-breaking spaces sides.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_yesno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Yes No with Variable Responses using cli — cli_yesno","text":"TRUE yes response FALSE response.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/cli_yesno.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Yes No with Variable Responses using cli — cli_yesno","text":"yesno usethis packages available MIT license (yesno LICENSE usethis LICENSE) work yesno usethis authors.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/quiet_cli_inform.html","id":null,"dir":"Reference","previous_headings":"","what":"Quiet version of cli_inform() — quiet_cli_inform","title":"Quiet version of cli_inform() — quiet_cli_inform","text":"implementation cliExtras.quiet option based implementation similar setting googlesheets4, googledrive, gargle. cliExtras.quiet option set TRUE, quiet_cli_inform() trigger message. used cli_inform_ifnot() cli_inform_if() functions cliExtras.","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/quiet_cli_inform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quiet version of cli_inform() — quiet_cli_inform","text":"","code":"quiet_cli_inform(..., .envir = parent.frame())"},{"path":"https://elipousson.github.io/cliExtras/reference/quiet_cli_inform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quiet version of cli_inform() — quiet_cli_inform","text":"... Additional parameters passed cli_inform() .envir Environment evaluate glue expressions .","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/register_cli_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a custom cli format method with registerS3method — register_cli_format","title":"Register a custom cli format method with registerS3method — register_cli_format","text":"Register custom cli format method registerS3method","code":""},{"path":"https://elipousson.github.io/cliExtras/reference/register_cli_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a custom cli format method with registerS3method — register_cli_format","text":"","code":"register_cli_format(class = NULL, method = NULL, envir = parent.frame())"},{"path":"https://elipousson.github.io/cliExtras/reference/register_cli_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a custom cli format method with registerS3method — register_cli_format","text":"class, method Object class format function passed registerS3method(). envir Environment S3 method registered. Defaults parent.frame().","code":""},{"path":[]},{"path":"https://elipousson.github.io/cliExtras/reference/set_cli_quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the cli.default_handler and cliExtras.quiet options — set_cli_quiet","text":"","code":"set_cli_quiet(quiet = FALSE, msg = !quiet)"},{"path":"https://elipousson.github.io/cliExtras/reference/set_cli_quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the cli.default_handler and cliExtras.quiet options — set_cli_quiet","text":"quiet TRUE set cli.default_handler option suppressMessages cliExtras.quiet option TRUE. Defaults FALSE. msg TRUE, set_cli_quiet() displays message confirming option changes. FALSE, function display message. Defaults !quiet","code":""},{"path":"https://elipousson.github.io/cliExtras/news/index.html","id":"cliextras-0109001-2023-03-16","dir":"Changelog","previous_headings":"","what":"cliExtras 0.1.0.9001 (2023-03-16)","title":"cliExtras 0.1.0.9001 (2023-03-16)","text":"Update check_yes() pass .envir call parameters wrap prompt non-breaking spaces. Add new cli_alert_ifnot(), cli_alert_if(), related functions.","code":""},{"path":"https://elipousson.github.io/cliExtras/news/index.html","id":"cliextras-0109000-2023-03-09","dir":"Changelog","previous_headings":"","what":"cliExtras 0.1.0.9000 (2023-03-09)","title":"cliExtras 0.1.0.9000 (2023-03-09)","text":"Add cli_if() cli_ifnot() Add cli_paths(), cli_list_files(), cli_bulletize() Add interactive cli_menu(), cli_yesno(), cli_ask()","code":""}]
