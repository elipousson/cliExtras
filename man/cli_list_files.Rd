% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cliExtras.R
\name{cli_list_files}
\alias{cli_list_files}
\title{Display a list of files as a list of items}
\usage{
cli_list_files(
  path,
  pattern = NULL,
  full.names = TRUE,
  message = "{length(files)} file{?s} found in {.path {path}}:",
  bullet = "*",
  .envir = current_env(),
  ...
)
}
\arguments{
\item{path}{a character vector of full path names; the default
    corresponds to the working directory, \code{\link[base]{getwd}()}.  Tilde
    expansion (see \code{\link[base]{path.expand}}) is performed.  Missing
    values will be ignored.  Elements with a marked encoding will
    be converted to the native encoding (and if that fails, considered
    non-existent).}

\item{pattern}{an optional \link[base]{regular expression}.  Only file names
    which match the regular expression will be returned.}

\item{full.names}{a logical value.  If \code{TRUE}, the directory
    path is prepended to the file names to give a relative file path.
    If \code{FALSE}, the file names (rather than paths) are returned.}

\item{message}{Passed to \code{\link[cli:cli_abort]{cli::cli_inform()}}.}

\item{.envir}{Passed to \code{\link[cli:cli_abort]{cli::cli_inform()}}. Defaults to
\code{\link[rlang:stack]{rlang::current_env()}} rather than \code{\link[=parent.frame]{parent.frame()}} to support evaluation
of default message that includes the number of files found at the path.}

\item{...}{
  Arguments passed on to \code{\link[base:list.files]{base::list.files}}
  \describe{
    \item{\code{all.files}}{a logical value.  If \code{FALSE}, only the
    names of visible files are returned (following Unix-style visibility,
    that is files whose name does not start with a dot).  If \code{TRUE},
    all file names will be returned.}
    \item{\code{recursive}}{logical.  Should the listing recurse into directories?}
    \item{\code{ignore.case}}{logical.  Should pattern-matching be case-insensitive?}
    \item{\code{include.dirs}}{logical.  Should subdirectory names be included in
    recursive listings?  (They always are in non-recursive ones).}
    \item{\code{no..}}{logical.  Should both \code{"."} and \code{".."} be excluded
    also from non-recursive listings?}
  }}
}
\description{
Display a list of files as a list of items
}
\seealso{
\code{\link[cli:cli_bullets]{cli::cli_bullets()}}
}
