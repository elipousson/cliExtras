% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cli_menu.R
\name{cli_menu}
\alias{cli_menu}
\title{Display a Message then Read a Line from the Terminal}
\usage{
cli_menu(
  choices,
  title = NULL,
  message = "Enter your selection or press {.kbd 0} to exit.",
  prompt = "Selection:",
  exit = 0,
  ind = FALSE,
  id = NULL,
  call = .envir,
  .envir = parent.frame()
)
}
\arguments{
\item{choices}{Required vector or list of choices.}

\item{title}{Title for menu. Character vector passed to \code{\link[cli:cli_h1]{cli::cli_h2()}} if
title is length 1 or to \code{\link[cli:cli_bullets]{cli::cli_bullets()}} if length is greater than 1.}

\item{message}{Additional message to display after choices and before prompt.}

\item{prompt}{Characters to show as user prompt in console following
displayed menu options. Defaults to "Selection:" (matching \code{\link[utils:menu]{utils::menu()}})}

\item{exit}{Character to use to exit menu.}

\item{ind}{If \code{TRUE}, return index position, if \code{FALSE} (default), return
item from choices.}

\item{id}{Optional id of the \code{div.bullets} element, can be used in themes.}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}

\item{.envir}{Environment to evaluate the glue expressions in.}
}
\description{
Display a Message then Read a Line from the Terminal
}
\examples{
\dontrun{
if (interactive()) {
  cli_menu(list("A", "B", "C"), title = "Pick a letter?")

  cli_menu(c("A", "B", "C"), labels = "Alpha")

  cli_menu(list(list(1, 2, 3), "A", "B", "C"), title = "Pick from a list")
}
}
}
